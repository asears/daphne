[project]
name = "daphne"
dynamic = ["version"]
requires-python = ">=3.9"

# TODO(AS): upgrade setup.cfg
# url = "https://github.com/django/daphne"
# author = "Django Software Foundation"
# author-email = "foundation@djangoproject.com"
description = "Django ASGI (HTTP/WebSocket) server"
# long-description = { file = "README.rst" }
# long-description-content-type = "text/x-rst"
license = { text = "BSD" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
]

dependencies = [
    "asgiref>=3.5.2,<4",
    "autobahn>=22.4.2",
    "twisted[tls]>=22.4",
]

[project.optional-dependencies]
tests = [
    "django",
    "hypothesis",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "black",
    "uv",
    "ruff",
    "tox",
]

[project.scripts]
daphne = "daphne.cli:CommandLineInterface.entrypoint"

[tool.setuptools.dynamic]
version = { attr = "daphne.__version__" }

[tool.uv]
package = true

[tool.flake8]
exclude = ["venv/*", "tox/*", "docs/*", "testproject/*", "js_client/*", ".eggs/*"]
extend-ignore = ["E123", "E128", "E266", "E402", "W503", "E731", "W601", "B036"]
max-line-length = 120

[tool.isort]
profile = "black"

[tool.pytest]
testpaths = ["tests"]
asyncio_mode = "strict"
filterwarnings = [
    "ignore::pytest.PytestDeprecationWarning"
]

# [tool.pytest.ini_options]
# addopts = "--cov=daphne --cov-report html"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4

# Assume Python 3.10
target-version = "py310"

# output format
output-format = "grouped"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "W", "UP", "S", "B"]

# E402 Module level import not at top of file
# S101 Use of `assert` detected
# C901 `process` is too complex
# UP031 Use format specifiers instead of percent format
# UP032 [*] Use f-string instead of `format` call
# B904 Within an `except` clause, raise exceptions with ...
ignore = ["E402", "S101", "C901", "UP031", "UP032", "B904"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# S301 `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue
# S108 Probable insecure usage of temporary file or directory: "/tmp/daphne.sock"
# UP041 Replace aliased errors with `TimeoutError`
"daphne/testing.py" = ["S301"]
"tests/test_cli.py" = ["S108"]
"tests/http_base.py" = ["UP041"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.tox]
envlist = ["py39", "py310", "py311", "py312", "py313"]

[tool.tox.testenv]
extras = ["tests"]
commands = ["pytest -v {posargs}"]